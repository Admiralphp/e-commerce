You are part of a development team building a web application for selling phone accessories (cases, chargers, earphones, etc.) using a microservices architecture.

🔧 Project Architecture Overview:

Frontend: Next.js

Authentication Service: Node.js + MongoDB ← this is your task

Product Catalog Service: Go + PostgreSQL

Order Service: Node.js + MongoDB

Admin Dashboard: Angular

All services communicate via an Nginx API Gateway, and all protected APIs require JWT-based authentication.

✅ Your task:
Implement the Authentication and User Management microservice using Node.js (Express.js) and MongoDB.

📌 Required Features:

User registration

User login (returns a signed JWT)

JWT-based authentication middleware

User roles (admin, client) with role-based access control

User logout (handled on frontend by removing token)

Fetch current user info (via token)

CRUD for user management (admin only)

🔒 Security Requirements:

Use bcrypt to hash passwords

Use JWT to authenticate users and protect private routes

Validate token and attach user info to requests

Restrict certain routes to admin users only

🗃 User Model Fields (MongoDB + Mongoose):

id (MongoDB ObjectId)

username (string, unique)

email (string, unique)

password (hashed)

role (enum: 'admin' or 'client')

createdAt (timestamp)

🛠 Tech Stack Requirements:

Node.js with Express.js

MongoDB using Mongoose

JWT for authentication

bcrypt for password hashing

RESTful API design (/auth/register, /auth/login, /users, etc.)

Please generate the full project structure including models, controllers, routes, middleware for JWT validation and role-based access control.