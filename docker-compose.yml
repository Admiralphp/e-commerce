version: '3.8'

services:  # API Gateway
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: phone-accessories-gateway
    ports:
      - "80:80"
    networks:
      - microservices-network
    depends_on:
      - auth-service
      - product-service
      - order-service
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  # Authentication Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: phone-accessories-auth
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGO_URI=mongodb://mongo:27017/auth-service
      - JWT_SECRET=phonesAccessoriesSecretKey123
      - JWT_EXPIRY=30d
    ports:
      - "3000:3000"
    networks:
      - microservices-network
    depends_on:
      - mongo
    restart: unless-stopped
    volumes:
      - ./logs/auth:/usr/src/app/logs
  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: phone-accessories-products
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=products
      - DB_PORT=5432
      - JWT_SECRET=phonesAccessoriesSecretKey123
    ports:
      - "8080:8080"
    networks:
      - microservices-network
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - ./logs/products:/root/logs
  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: phone-accessories-orders
    environment:
      - NODE_ENV=development
      - PORT=3002
      - MONGO_URI=mongodb://mongo:27017/order-service
      - JWT_SECRET=phonesAccessoriesSecretKey123
    ports:
      - "3002:3002"
    networks:
      - microservices-network
    depends_on:
      - mongo
    restart: unless-stopped
    volumes:
      - ./logs/orders:/usr/src/app/logs  # Frontend (Next.js)
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    container_name: phone-accessories-frontend
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://api.phoneaccessories.local/api
    ports:
      - "3001:3000"
    networks:
      - microservices-network
    depends_on:
      - auth-service
      - product-service
      - order-service
    restart: unless-stopped
    volumes:
      - ./logs/frontend:/app/logs  # Admin Dashboard (Angular)
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile    container_name: phone-accessories-admin
    environment:
      - API_URL=http://api.phoneaccessories.local/api
    ports:
      - "4200:4200"
    networks:
      - microservices-network
    depends_on:
      - auth-service
      - product-service
      - order-service
    restart: unless-stopped
    volumes:
      - ./logs/admin:/var/log/nginx
      
  # MongoDB (for Auth and Order services)
  mongo:
    image: mongo:5.0
    container_name: phone-accessories-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    volumes:
      - mongo-data:/data/db
    networks:
      - microservices-network
    restart: unless-stopped

  # Mongo Express (MongoDB UI)
  mongo-express:
    image: mongo-express
    container_name: phone-accessories-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpassword
      - ME_CONFIG_MONGODB_SERVER=mongo
    networks:
      - microservices-network
    depends_on:
      - mongo
    restart: unless-stopped
  # PostgreSQL (for Product service)
  postgres:
    image: postgres:14-alpine
    container_name: phone-accessories-postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=products
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - microservices-network
    restart: unless-stopped

  # PgAdmin (PostgreSQL UI)
  pgadmin:
    image: dpage/pgadmin4
    container_name: phone-accessories-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    networks:
      - microservices-network
    depends_on:
      - postgres
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge

volumes:
  mongo-data:
  postgres-data:
